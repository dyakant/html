======================================================================
21/05/2018
----------------------------------------------------------------------
JSX-синтаксический сахар
className = class
classNameNew = class-name-new

В src создаем попку components. В ней добавляем папки по логическим блокам, 
например, Header. С большой буквы, т.к. так же будет называться класс.
В папке файл можно назвать просто index.js. При импорте система всё найдёт.
import Header from 'src/components/Header'


this.state - локальное состояние компонентам.
this.props - передаются наружу, не изменяются

Фрагменты, стэйты - состояния
20:45 - 20:55 |<(

В PureComponent определена функция componentShouldUpdatekk


события привязываются атрибутами в элементах (21:00)

this.forceUpdate()

Function render() не должна менять ничего. Только вызывать.

Можно почитать reactjs.org/docs

--------------------------------------------
React-Bootstrap
--------------------------------------------
npm i react-bootstrap
import {Grid, Navbar} from 'react-bootsrap'

21:30 - 22:45 Пример корзины
    22:20 - 22:30 - отладка, можно пропустить

? Вместо Lodash.findIndex свою функцию
? Lodash - откуда узнается про библиотеки
? Во что компилятор react превращает Lodash.findIndex, в JS функции?
?+ В какой момент прорисовка? - setState отрисовывает изменённые элементы
? Методы массивов, учить?
? Как идёт верстка в проекте, где хранятся исходники, что выкатывается на продакшн



======================================================================
17/05/2018
----------------------------------------------------------------------
reactjs.org -   библиотека, кот. рендерит страницу и работает с событиями
                Начиная с версии 16, появилась фича, кот. укоряет работу.
                Основан на виртуальном DOM, язык 

angular.io      - версия 2 (6). Особенности: работает TypeScript (JS  с типизацией)
                  позволяет не использовать Babel.
angularjs.org   - версия 1, старая и уже не используется

vuejs.org - отсносительно простой, объединяет возможности реакта и ангуляра
            Используется в Китае.Работа шаблонами, события js

*** REACT ***

CDN - 

npx create-react-app <папка> - создаёт проект, копирует файлы

npm i - install node_modules from folder with package.json


Входная точка src/index.js
App.js обязательно импорт класса React из React. Далее наследуем класс от Component or PureComponent


npm start

npm run build

npm eject - открепляет проект от react. Использует Webpack

gatsby - фреймворк для создания сайтов (studio 98)


21:50 - Пример работы Реакт с компонентами, reactdatepicker

======================================================================
14/05/2018
----------------------------------------------------------------------
jquery.page2page.ru

Повторение всплытия событий, stopPropagation
document.querySelector("#id").addEventListener(event, handler)

----------------------------------------------------------------------
20:45 - Функции в JS, классы,
----------------------------------------------------------------------
Функции - конструкторы: позволяют создавать объекты
function Person(){
    this.
}
// this по умолчанию undefined,

const obj = {
    name = "John";
}
function Person(name){
    this.name
}
const obj2 = new Person("lada");

Object -> Prototype
Прототип появляется, когда объект создается через функцию

Person.apply(context, handler1, handler2)
Person.call(context, handler1, handler2)
//1-параметром передаётя объект


Person.bind
//Привязывает объект
|( 21:15 

function создаёт свою область и свой this. Стрелочная функция использует родительский this;
В function можно использовать self для ссылки к родительскому объекту.

Наследование

class Person2{
    constructor(name){
        this.name=name;
    }
    red(){console.log(this.name)}
}
class Man extends Person2{
    constructor(name, age){
        super(name);
        this.age = age; //this нельзя вызывать раньше чем super
    }
    green(){console.log(this.age)}
    red(){"Man"}

//_ag1 - private variable
    get age1(){
        return this._age1;
    }
    set age1(a){
        if(Number.isInteger(a)){
            this._age1=a;
        }
        return
    }

}